# 1.Recyclable and Low Fat Products
select product_id from Products
where low_fats='Y' and recyclable='Y'

#2.Find Customer Referee
select name from Customer
where referee_id not in(2) or referee_id is null

#3.Big Countries
select name,population,area from World
where area>=3000000 or population>=25000000

#4.Article Views I
select DISTINCT author_id AS id from Views
where author_id =viewer_id 
order by author_id

#5. Invalid Tweets
select DISTINCT author_id AS id from Views
where author_id =viewer_id 
order by author_id

# 6.Replace Employee ID With The Unique Identifier
select EI.unique_id,E.name from 
Employees E LEFT join EmployeeUNI EI
on E.id=EI.id

# 7. Product Sales Analysis 
select P.product_name,S.year,S.price
from Product P join Sales S
on P.product_id =S.product_id 

# 8.Customer Who Visited but Did Not Make Any Transactions
select V.customer_id, COUNT(V.visit_id) as count_no_trans from
Visits V LEFT join  Transactions T
on V.visit_id=T.visit_id
WHERE T.transaction_id is null
group by V.customer_id

#9.Rising Temperature
select W1.id 
from Weather W1, Weather W2
where W1.temperature>W2.temperature and  DATEDIFF(w1.recordDate, w2.recordDate) = 1

#10.Average Time of Process per Machine
select W1.id 
from Weather W1, Weather W2
where W1.temperature>W2.temperature and  DATEDIFF(w1.recordDate, w2.recordDate) = 1

#11.Employee Bonus
select E.name,B.bonus from 
Employee E left join Bonus B 
on E.empId=B.empID
where B.bonus<1000 or B.bonus is null

#12.Students and Examinations
select S.student_id,
S.student_name,
Su.subject_name,
COUNT(E.student_id) as attended_exams
from Students S CROSS JOIN Subjects Su
LEFT JOIN Examinations E
ON  S.student_id = E.student_id and 
Su.subject_name=E.subject_name
group by S.student_id,S.student_name,Su.subject_name
ORDER BY s.student_id, Su.subject_name;

#13.Managers with at Least 5 Direct Reports
select e1.name from
Employee e1 join Employee e2
on e1.id=e2.managerId
group by e2.managerId 
having count(e2.id)>=5

#14.Confirmation Rate
SELECT 
    S.user_id,
    ROUND(
        IFNULL(
            SUM(action = 'confirmed') / COUNT(*),
            0
        ),
        2
    ) AS confirmation_rate
FROM 
    Signups S
LEFT JOIN 
    Confirmations C ON S.user_id = C.user_id
GROUP BY 
   S.user_id;


#15.Not Boring Movies
select * from Cinema
where MOD(id,2)<>0 and description <>'boring'
order by rating desc

#16.Average Selling Price
select P.product_id,round(sum(U.units*P.price)/sum(U.units),2) as average_price
from Prices P left join UnitsSold U
on P.product_id=U.product_id 
WHERE 
U.purchase_date between start_date and end_date
group by P.product_id 

#17.Project Employees I
select P.project_id,ROUND(avg(E.experience_years),2) as average_years
from Project P left join Employee E
On E.employee_id=P.employee_id
group by P.project_id







